int search(int*banned,int bannedSize,int x){
    int left=0;
    int right=bannedSize-1;
    while(left<=right){
        int mid=(left+(right-left)/2);
        if(banned[mid]==x) return 1;
        else if(banned[mid]<x) left=mid+1;
        else right=mid-1;
    }
    return 0;
}

int compare(void const*a,void const*b){
    return (*(int*)a-*(int*)b);
}


int maxCount(int* banned, int bannedSize, int n, int maxSum) {
    qsort(banned,bannedSize,sizeof(int),compare);
    int sum=0;
    int count=0;
    for(int i=1;i<=n;i++){
        if(search(banned,bannedSize,i)==0){
            if(sum+i<=maxSum){
                sum+=i;
                count++;
            }
            else{
                break;
            }
        }
    }
    return count;
}
